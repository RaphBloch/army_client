{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raphael Bloch\\\\Desktop\\\\Internet\\\\armee_client\\\\armee_client\\\\src\\\\components\\\\Screen.js\";\nimport React, { Component, useRef } from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport '../Style/Style.css';\nimport logo from '../../public/up-arrow.png';\nconst ENDPOINT = \"http://127.0.0.1:4000\";\n\nclass Screen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      altitude: 0,\n      HIS: 0,\n      ADI: 0,\n      visual: 'graphic'\n    };\n    this.canvasRef = React.createRef();\n    console.log('Constructor');\n  }\n\n  componentDidMount() {\n    //region Connection for getting data\n    // I open a socket to create the connection with the server\n    console.log('New Connection');\n    const socket = new socketIOClient(ENDPOINT); //when the server emits a Data message , I get the data and change my component's state\n\n    socket.on(\"Data\", data => {\n      this.setState({\n        altitude: data[0],\n        HIS: data[1],\n        ADI: data[2]\n      });\n    }); //endregion\n    // region Creating a clock\n    // creation of the canvas\n\n    const canvas = this.canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    var radius = canvas.height / 2;\n    ctx.translate(radius, radius);\n    radius = radius * 0.90;\n    drawClock();\n    /*\r\n    Function to draw a clock\r\n     */\n\n    function drawClock() {\n      drawface();\n      drawnumbers();\n    }\n    /*\r\n    Function for drawing the face of my clock\r\n     */\n\n\n    function drawface() {\n      var grad;\n      ctx.beginPath();\n      ctx.arc(0, 0, radius, 0, 2 * Math.PI);\n      ctx.fillStyle = 'white';\n      ctx.fill();\n      grad = ctx.createRadialGradient(0, 0, radius * 0.95, 0, 0, radius * 1.05);\n      grad.addColorStop(0, '#333');\n      grad.addColorStop(0.5, 'white');\n      grad.addColorStop(1, '#333');\n      ctx.strokeStyle = grad;\n      ctx.lineWidth = radius * 0.1;\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.arc(0, 0, radius * 0, 0, 2 * Math.PI);\n      ctx.fillStyle = '#333';\n      ctx.fill();\n    }\n    /*\r\n    Function for drawing  the  numbers on the clock\r\n     */\n\n\n    function drawnumbers() {\n      var ang;\n      var num;\n      ctx.font = radius * 0.15 + \"px arial\";\n      ctx.textBaseline = \"middle\";\n      ctx.textAlign = \"center\";\n\n      for (num = 0; num < 4; num++) {\n        ang = num * Math.PI / 2;\n        console.log(num);\n        ctx.rotate(ang);\n        ctx.translate(0, -radius * 0.85);\n        ctx.rotate(-ang);\n        ctx.fillText((90 * num).toString(), 0, 0);\n        ctx.rotate(ang);\n        ctx.translate(0, radius * 0.85);\n        ctx.rotate(-ang);\n      }\n    } //endregion\n\n\n    console.log('Component');\n  }\n  /*\r\n  Function to get the data with a  text representation\r\n   */\n\n\n  change_visualToText() {\n    this.setState({\n      visual: 'text'\n    });\n  }\n  /*\r\n  Function to get the data with a graphic representation\r\n   */\n\n\n  change_visualToGraphic() {\n    this.setState({\n      visual: 'graphic'\n    });\n  }\n\n  render() {\n    console.log('render');\n    const data = this.state; // To organize my  circle for ADI parameter\n\n    console.log(\"ADI : \" + data.ADI);\n    let blue = \"50%\";\n    let green = \"50%\";\n\n    if (data.ADI > 0) {\n      blue = (data.ADI / 2 + 53).toString() + \"%\";\n      green = (100 - (data.ADI / 2 + 47)).toString() + \"%\";\n    } else {\n      green = (-data.ADI / 2 + 53).toString() + \"%\";\n      blue = (100 - (-data.ADI / 2 + 47)).toString() + \"%\";\n    }\n\n    console.log(blue);\n    console.log(green); // manage the altitude parameter\n\n    console.log(\"Altitude : \" + data.altitude);\n    let altitude = (300 - data.altitude / 10).toString() + \"px\";\n    console.log(altitude); //manage the HSI parameter\n\n    console.log(\"HSI: \" + data.HSI);\n    let angle = 'rotate' + '(' + data.HIS.toString() + 'deg)';\n    console.log(angle);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 16\n      }\n    }, \"Welcome to your data screen  \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      id: \"text_btn\",\n      onClick: this.change_visualToText.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }, \"Text\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      id: \"visual_btn\",\n      onClick: this.change_visualToGraphic.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 25\n      }\n    }, \"Visual\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text_container\",\n      style: {\n        display: this.state.visual == 'text' ? \"flex\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 29\n      }\n    }, \"Altitude:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 29\n      }\n    }, \" \", this.state.altitude, \" M \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 29\n      }\n    }, \" HIS\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 29\n      }\n    }, \" \", this.state.HIS, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 29\n      }\n    }, \"ADI:\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 29\n      }\n    }, \" \", this.state.ADI, \"  \"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"graphic_container\",\n      style: {\n        display: this.state.visual == 'graphic' ? \"flex\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"altitude_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      style: {\n        marginTop: altitude\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bar-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      id: \"3000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 35\n      }\n    }, \"3000\"), /*#__PURE__*/React.createElement(\"li\", {\n      id: \"2000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 35\n      }\n    }, \"2000\"), /*#__PURE__*/React.createElement(\"li\", {\n      id: \"1000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 35\n      }\n    }, \"1000\"), /*#__PURE__*/React.createElement(\"li\", {\n      id: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 35\n      }\n    }, \"0\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"HIS_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.canvasRef,\n      width: 300,\n      height: 300,\n      style: {\n        backgroundcolor: 'white',\n        transform: angle\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"arrow-img\",\n      src: logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ADI_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"green\",\n      style: {\n        width: green\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blue\",\n      style: {\n        width: blue\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\nexport default Screen;","map":{"version":3,"sources":["C:/Users/Raphael Bloch/Desktop/Internet/armee_client/armee_client/src/components/Screen.js"],"names":["React","Component","useRef","socketIOClient","logo","ENDPOINT","Screen","constructor","props","state","altitude","HIS","ADI","visual","canvasRef","createRef","console","log","componentDidMount","socket","on","data","setState","canvas","current","ctx","getContext","radius","height","translate","drawClock","drawface","drawnumbers","grad","beginPath","arc","Math","PI","fillStyle","fill","createRadialGradient","addColorStop","strokeStyle","lineWidth","stroke","ang","num","font","textBaseline","textAlign","rotate","fillText","toString","change_visualToText","change_visualToGraphic","render","blue","green","HSI","angle","bind","display","marginTop","backgroundcolor","transform","width"],"mappings":"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","sourcesContent":["import React,{Component , useRef} from 'react';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport  '../Style/Style.css'\r\nimport logo from '../../public/up-arrow.png'\r\n\r\nconst ENDPOINT = \"http://127.0.0.1:4000\";\r\n\r\n\r\nclass Screen extends  Component\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state ={\r\n            altitude: 0,\r\n            HIS : 0,\r\n            ADI : 0,\r\n            visual : 'graphic'\r\n        };\r\n        this.canvasRef = React.createRef();\r\n        console.log('Constructor');\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n\r\n        //region Connection for getting data\r\n\r\n        // I open a socket to create the connection with the server\r\n        console.log('New Connection');\r\n        const socket = new socketIOClient(ENDPOINT);\r\n        //when the server emits a Data message , I get the data and change my component's state\r\n        socket.on(\"Data\", data => {\r\n            this.setState({altitude : data[0],HIS : data[1],ADI : data[2]});\r\n        });\r\n\r\n        //endregion\r\n\r\n        // region Creating a clock\r\n        // creation of the canvas\r\n        const canvas = this.canvasRef.current;\r\n        const ctx = canvas.getContext('2d');\r\n        var radius = canvas.height / 2;\r\n        ctx.translate(radius, radius);\r\n        radius = radius * 0.90;\r\n        drawClock();\r\n\r\n\r\n        /*\r\n        Function to draw a clock\r\n         */\r\n        function drawClock() {\r\n\r\n\r\n            drawface();\r\n            drawnumbers();\r\n\r\n        }\r\n\r\n        /*\r\n        Function for drawing the face of my clock\r\n         */\r\n        function drawface() {\r\n            var grad;\r\n            ctx.beginPath();\r\n            ctx.arc(0, 0, radius, 0, 2 * Math.PI);\r\n            ctx.fillStyle = 'white';\r\n            ctx.fill();\r\n\r\n            grad = ctx.createRadialGradient(0, 0 ,radius * 0.95, 0, 0, radius * 1.05);\r\n            grad.addColorStop(0, '#333');\r\n            grad.addColorStop(0.5, 'white');\r\n            grad.addColorStop(1, '#333');\r\n            ctx.strokeStyle = grad;\r\n            ctx.lineWidth = radius*0.1;\r\n            ctx.stroke();\r\n\r\n            ctx.beginPath();\r\n            ctx.arc(0, 0, radius * 0, 0, 2 * Math.PI);\r\n            ctx.fillStyle = '#333';\r\n            ctx.fill();\r\n        }\r\n\r\n\r\n        /*\r\n        Function for drawing  the  numbers on the clock\r\n         */\r\n        function drawnumbers() {\r\n            var ang;\r\n            var num;\r\n            ctx.font = radius * 0.15 + \"px arial\";\r\n            ctx.textBaseline = \"middle\";\r\n            ctx.textAlign = \"center\";\r\n\r\n            for(num = 0; num < 4; num++){\r\n                ang = num * Math.PI / 2 ;\r\n                console.log(num);\r\n                ctx.rotate(ang);\r\n                ctx.translate(0, -radius * 0.85);\r\n                ctx.rotate(-ang);\r\n                ctx.fillText((90*num).toString(), 0, 0);\r\n                ctx.rotate(ang);\r\n                ctx.translate(0, radius * 0.85);\r\n                ctx.rotate(-ang);\r\n            }\r\n        }\r\n\r\n        //endregion\r\n\r\n\r\n\r\n        console.log('Component');\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    /*\r\n    Function to get the data with a  text representation\r\n     */\r\n    change_visualToText()\r\n    {\r\n       this.setState({visual : 'text'});\r\n    }\r\n\r\n\r\n    /*\r\n    Function to get the data with a graphic representation\r\n     */\r\n    change_visualToGraphic()\r\n    {\r\n        this.setState({visual : 'graphic'});\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render()\r\n    {\r\n\r\n\r\n\r\n\r\n        console.log('render');\r\n        const data = this.state;\r\n\r\n\r\n\r\n        // To organize my  circle for ADI parameter\r\n\r\n        console.log(\"ADI : \" +data.ADI );\r\n        let blue = \"50%\";\r\n        let green = \"50%\";\r\n        if(data.ADI > 0  ) {\r\n            blue = (data.ADI / 2 + 53).toString() + \"%\";\r\n            green = (100 - (data.ADI / 2 + 47)).toString() + \"%\";\r\n        }\r\n        else\r\n        {\r\n            green = ((-data.ADI) / 2 + 53).toString() + \"%\" ;\r\n            blue = (100 - ((-data.ADI) / 2 + 47)).toString() + \"%\";\r\n        }\r\n        console.log(blue);\r\n        console.log(green);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        // manage the altitude parameter\r\n        console.log(\"Altitude : \" +data.altitude );\r\n        let altitude = (300 -data.altitude/10).toString()+\"px\";\r\n        console.log(altitude);\r\n\r\n        //manage the HSI parameter\r\n        console.log(\"HSI: \" +data.HSI );\r\n        let angle = 'rotate'+ '(' + data.HIS.toString() + 'deg)';\r\n        console.log(angle);\r\n\r\n\r\n        return(\r\n\r\n            <div >\r\n\r\n               <h1>Welcome to your data screen  </h1>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"button_container\">\r\n                        <button className=\"button\" id=\"text_btn\"  onClick={this.change_visualToText.bind(this)}  >Text</button>\r\n                        <button  className=\"button\" id=\"visual_btn\"  onClick={this.change_visualToGraphic.bind(this)} >Visual</button>\r\n                    </div>\r\n                    <div className=\"text_container\" style={{ display : this.state.visual == 'text' ? \"flex\" : \"none\"}}>\r\n\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">Altitude:</div>\r\n                            <div className=\"card-body\"> {this.state.altitude} M </div>\r\n                        </div>\r\n\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\"> HIS</div>\r\n                            <div className=\"card-body\"> {this.state.HIS} </div>\r\n                        </div>\r\n\r\n                        <div className=\"card\">\r\n                            <div className=\"card-header\">ADI:</div>\r\n                            <div className=\"card-body\"> {this.state.ADI}  </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"graphic_container\" style={ { display : this.state.visual == 'graphic' ? \"flex\" : \"none\"} }>\r\n                        <div className=\"altitude_container\">\r\n                          <div className=\"bar\">\r\n                              <hr style = {{ marginTop:  altitude }}/>\r\n                              <div className=\"bar-value\">\r\n                                  <li id=\"3000\">3000</li>\r\n                                  <li id=\"2000\">2000</li>\r\n                                  <li id=\"1000\">1000</li>\r\n                                  <li id=\"0\">0</li>\r\n\r\n                              </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"HIS_container\">\r\n                            <canvas ref={this.canvasRef} width={300} height={300} style={{ backgroundcolor: 'white', transform : angle }}  ></canvas>\r\n                            <div>\r\n                                <img className='arrow-img' src={logo}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"ADI_container\">\r\n                            <div className=\"circle\" >\r\n                                <div className=\"green\" style={{ width : green}}></div>\r\n                                <div className=\"blue\" style={{ width : blue}}></div>\r\n                             </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Screen;"]},"metadata":{},"sourceType":"module"}